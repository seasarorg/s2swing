<?xml version="1.0" encoding="UTF-8"?>

<project name="s2swing-build" default="package" basedir=".">

  <property name="build.finalName" value="s2swing-0.1.0"/>
  <property name="build.dir" value="target"/>
  <property name="build.outputDir" value="${build.dir}/classes"/>
  <property name="build.srcDir.0" value="src/main/java"/>
  <property name="build.resourceDir.0" value="src/main/resources"/>
  <property name="build.testOutputDir" value="${build.dir}/test-classes"/>
  <property name="build.testDir.0" value="src/test/java"/>
  <property name="build.testResourceDir.0" value="src/test/resources"/>
  <property name="test.reports" value="${build.dir}/test-reports"/>
  <property name="dist.dir" value="dist"/>
  <property name="reporting.outputDirectory" value="${dist.dir}/doc"/>

  <property name="lib" value="lib"/>

  <path id="build.classpath">
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="clean" description="Clean the output directory">
    <delete dir="${build.dir}"/>
  </target>

  <target name="compile" description="Compile the code">
    <mkdir dir="${build.outputDir}"/>
    <javac destdir="${build.outputDir}" 
           nowarn="false" 
           debug="true" 
           optimize="false" 
           deprecation="true" 
           verbose="false" 
           fork="false">
      <src>
        <pathelement location="${build.srcDir.0}"/>
      </src>
      <classpath refid="build.classpath"/>
    </javac>
    <copy todir="${build.outputDir}">
      <fileset dir="${build.resourceDir.0}"/>
    </copy>
  </target>

  <target name="compile-tests" 
          depends="compile" 
          description="Compile the test code">
    <mkdir dir="${build.testOutputDir}"/>
    <javac destdir="${build.testOutputDir}" 
           nowarn="false" 
           debug="true" 
           optimize="false" 
           deprecation="true" 
           verbose="false" 
           fork="false">
      <src>
        <pathelement location="${build.testDir.0}"/>
      </src>
      <classpath>
        <path refid="build.classpath"/>
        <pathelement location="${build.outputDir}"/>
      </classpath>
    </javac>
    <copy todir="${build.testOutputDir}">
      <fileset dir="${build.testResourceDir.0}"/>
    </copy>
  </target>

  <target name="test" 
          depends="compile-tests" 
          description="Run the test cases">
    <mkdir dir="${test.reports}"/>
    <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
      <sysproperty key="basedir" value="."/>
      <formatter type="xml"/>
      <formatter type="plain" usefile="false"/>
      <classpath>
        <pathelement location="${build.outputDir}"/>
        <pathelement location="${build.testOutputDir}"/>
        <path refid="build.classpath"/>
      </classpath>
      <batchtest todir="${test.reports}">
        <fileset dir="${build.testDir.0}">
          <include name="**/*Test.java"/>
          <exclude name="**/*Abstract*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${build.srcDir.0}" 
             packagenames="*" 
             destdir="${reporting.outputDirectory}/apidocs" 
             access="protected" 
             old="false" 
             verbose="false" 
             version="true" 
             use="true" 
             author="true" 
             splitindex="false" 
             nodeprecated="false" 
             nodeprecatedlist="false" 
             notree="false" 
             noindex="false" 
             nohelp="false" 
             nonavbar="false" 
             serialwarn="false" 
             charset="UTF-8" 
             linksource="false" 
             breakiterator="false"/>
  </target>

  <target name="package" depends="compile" description="Package the application">
    <mkdir dir="${dist.dir}"/>
    <jar jarfile="${dist.dir}/${build.finalName}.jar" 
         compress="true" 
         index="false" 
         basedir="${build.outputDir}" 
         excludes="**/package.html"/>
  </target>

</project>